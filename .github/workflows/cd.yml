name: Spring Boot & Gradle CI/CD

# 이벤트 트리거
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: elasticbeanstalk-ap-northeast-2-526437230846

jobs:
  build:
    # 실행환경
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # 자바 버전 설정 스프링 3.0 이후부터 java17이 최소 요구사항
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # application.properties 추가
      - name: Update application.properties
        run: |
          echo $JWT_SECRET_KEY > src/main/resources/application-secret.properties
          echo $DB_URL >> src/main/resources/application-secret.properties
          echo $DB_USERNAME >> src/main/resources/application-secret.properties
          echo $DB_PASSWORD >> src/main/resources/application-secret.properties
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        # gradle build
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: clean bootJar
      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy
      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy
      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy
      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy
      # deploy 폴더 파일 zip 압축
      - name: Make zip file
        run: zip -r ./fishingLoad.zip ./deploy
        shell: bash
      # IAM 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      # S3로 zip파일 보내기
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./fishingLoad.zip s3://$S3_BUCKET_NAME/
      # Deploy 설정
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name fishingLoad \
          --deployment-group-name fishingLoad-deployment-group \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=$S3_BUCKET_NAME,key=fishingLoad.zip,bundleType=zip \
          --region ap-northeast-2